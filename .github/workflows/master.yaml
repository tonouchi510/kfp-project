name: master

on: 
  push:
    branches:
      - main

env:
  GCP_PROJECT: ${{ secrets.GCP_PROJECT_ID }}
  GCP_REGION: ${{ secrets.GCP_REGION }}
  GCP_SERVICE_ACCOUNT_KEY: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}
  VERTEX_SERVICE_ACCOUNT_NAME: ${{ secrets.GCP_SERVICE_ACCOUNT_NAME }}
  GOOGLE_APPLICATION_CREDENTIALS: "searvice-account.json"

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v2
      
      - name: Setup Authentication with gcloud
        uses: google-github-actions/setup-gcloud@master
        with:
          service_account_key: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}
          export_default_credentials: true
      
      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
          architecture: 'x64'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry
          poetry env use python3.9
          poetry install
      
      - name: Run test
        run: poetry run echo "skip" #python3 -m tests.main
   
  build-and-submit-pipeline:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 2
      
      - name: Setup Authentication with gcloud
        uses: google-github-actions/setup-gcloud@master
        with:
          service_account_key: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}
          export_default_credentials: true
      
      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
          architecture: 'x64'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry
          poetry env use python3.9
          poetry install
      
      - name: Run pipeline
        run: |
          echo $GCP_SERVICE_ACCOUNT_KEY > service-account.json
          cat .github/workflows/build-targets.txt | while read target
          do
            if [ "${target:0:9}" = "pipelines" ]; then
              echo "**********************************************"
              echo "Run $target"
              echo "**********************************************"
              pipeline_name=$(basename $target .tar.gz)
              package_name=${pipeline_name}.json
              poetry run python .github/workflows/helper.py run-pipeline \
                --package_path "$package_name" --pipeline_name "$pipeline_name" \
                --github_sha "$GITHUB_SHA"
            fi
          done
