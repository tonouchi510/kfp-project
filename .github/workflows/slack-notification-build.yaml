name: slack-notification-component-build

on:
  push:
    branches:
      - main
    paths:
      - "components/slack-notification/**/*"
      - ".github/workflows/slack-notification-build.yaml"
  pull_request:
    branches:
      - main
    paths:
      - "components/slack-notification/**/*"
      - ".github/workflows/slack-notification-build.yaml"

env:
  GCP_PROJECT: ${{ secrets.GCP_PROJECT_ID }}
  GCP_REGION: ${{ secrets.GCP_REGION }}
  GACTIONS_SERVICE_ACCOUNT_KEY: ${{ secrets.GACTIONS_SERVICE_ACCOUNT_KEY }}

jobs:

  test:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v2

      - name: Setup Authentication with gcloud
        uses: google-github-actions/setup-gcloud@v0
        with:
          service_account_key: ${{ env.GACTIONS_SERVICE_ACCOUNT_KEY }}
          export_default_credentials: true

      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
          architecture: 'x64'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry
          poetry env use python3.9
          poetry install
      
      - name: Run test
        run: echo "skip" #python3 -m tests.main

  build-docker-image-and-push:
    needs: test
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v2

      - name: Setup Authentication with gcloud
        uses: google-github-actions/setup-gcloud@v0
        with:
          service_account_key: ${{ env.GACTIONS_SERVICE_ACCOUNT_KEY }}
          export_default_credentials: true

      - name: Configure docker to use the gcloud cli
        run: gcloud auth configure-docker --quiet

      - name: Build and push slack-notification component image
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          file: ./components/slack-notification/Dockerfile
          push: true
          tags: |
            gcr.io/${{ env.GCP_PROJECT }}/slack-notification:latest
          cache-from: |
            gcr.io/${{ env.GCP_PROJECT }}/slack-notification:latest
          cache-to: type=inline
